---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tube
spec:
  selector:
    matchLabels:
      run: tube
  replicas: 1
  template:
    metadata:
      labels:
        run: tube
    spec:
      containers:
      - name: tube
        image: ashraf1abdelrasool/tube:1.0.0-SNAPSHOT
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: tube
  labels:
    run: tube
spec:
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8081
  type: NodePort
  selector:
    run: tube
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: file
spec:
  selector:
    matchLabels:
      run: file
  replicas: 1
  template:
    metadata:
      labels:
        run: file
    spec:
      containers:
      - name: file
        image: ashraf1abdelrasool/file:1.0.0-SNAPSHOT
        imagePullPolicy: Always
        ports:
        - containerPort: 8082
---
apiVersion: v1
kind: Service
metadata:
  name: file
  labels:
    run: file
spec:
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8082
  type: NodePort
  selector:
    run: file
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ffmpeg
spec:
  selector:
    matchLabels:
      run: ffmpeg
  replicas: 1
  template:
    metadata:
      labels:
        run: ffmpeg
    spec:
      containers:
      - name: ffmpeg
        image: ashraf1abdelrasool/ffmpeg:1.0.0-SNAPSHOT
        imagePullPolicy: Always
        ports:
        - containerPort: 8084
---
apiVersion: v1
kind: Service
metadata:
  name: ffmpeg
  labels:
    run: ffmpeg
spec:
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8084
  type: NodePort
  selector:
    run: ffmpeg
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ui
spec:
  selector:
    matchLabels:
      run: ui
  replicas: 1
  template:
    metadata:
      labels:
        run: ui
    spec:
      containers:
      - name: ui
        image: ashraf1abdelrasool/ui:1.0.0-SNAPSHOT
        imagePullPolicy: Always
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: ui
  labels:
    run: ui
spec:
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  type: NodePort
  selector:
    run: ui
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: services-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/x-forwarded-prefix: "true"
spec:
  rules:
  - http:
      paths:
      - path: /tube/?(.*)
        backend:
          serviceName: tube
          servicePort: 80
      - path: /file/?(.*)
        backend:
          serviceName: file
          servicePort: 80
      - path: /ffmpeg/?(.*)
        backend:
          serviceName: ffmpeg
          servicePort: 80
      - path: /?(.*)
        backend:
          serviceName: ui
          servicePort: 80